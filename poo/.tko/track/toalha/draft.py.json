{
    "patches": [
        {
            "label": "2025-09-16_19-37-33",
            "content": "@@ -1,29 +0,0 @@\n-print(%22minha toalha %C3%A9 rosa%22)%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-09-16_19-39-19",
            "content": "@@ -1,189 +1,29 @@\n-class Towel:%0A    def __init__ (self):%0A        self.color=%22red%22%0A        self.size=%22p%22%0A        self.wetness= 0%0A%0Atowel = Towel()%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)%0A%0A    \n+print(%22minha toalha %C3%A9 rosa%22)%0A\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-09-01",
            "content": "@@ -107,111 +107,8 @@\n  0%0A%0A\n-    def __str__(self):%0A        return f%22color:%7Bself:color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D %22%0A    %0A\n towe\n@@ -182,17 +182,8 @@\n s)%0A%0A\n-print (towel)\n+    \n",
            "lines": "12"
        },
        {
            "label": "2025-09-16_20-24-48",
            "content": "@@ -288,14 +288,14 @@\n %0Aprint (\n-T\n+t\n owel)\n",
            "lines": "15"
        },
        {
            "label": "2025-09-16_20-24-58",
            "content": "@@ -34,22 +34,9 @@\n lf):\n- #CONSTRUCTOR\n %0A\n+\n     \n@@ -172,17 +172,17 @@\n am:%7Bself\n-:\n+.\n size%7D, h\n@@ -189,17 +189,17 @@\n um:%7Bself\n-:\n+.\n wetness%7D\n@@ -205,437 +205,8 @@\n %7D %22%0A\n-    %0A    def dry(self, amount: int)-%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A            print(%22toalha encharcada%22) %0A            self.wetness = self.getMaxWetness() %0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0        %0A%0A\n     \n",
            "lines": "15"
        },
        {
            "label": "2025-09-22_19-03-51",
            "content": "@@ -648,23 +648,21 @@\n  %0A%0A    %0A\n-doguito\n+towel\n  = Towel\n@@ -666,78 +666,78 @@\n wel(\n-%22red%22, %22M%22)%0Aprint(doguito)%0Adoguito.dry (3)%0Aprint(doguito)%0Adoguito.dry(15)%0A\n+)%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)%0A%0Aprint (Towel)\n",
            "lines": "31"
        },
        {
            "label": "2025-09-22_19-05-34",
            "content": "@@ -32,29 +32,8 @@\n self\n-, color:str, size:str\n ): #\n@@ -141,15 +141,8 @@\n elf)\n- -%3E str\n :%0A  \n",
            "lines": "30"
        },
        {
            "label": "2025-09-22_19-07-37",
            "content": "@@ -87,20 +87,14 @@\n olor\n-: str= color\n+=%22red%22\n %0A   \n@@ -111,19 +111,12 @@\n size\n-: str= size\n+=%22p%22\n %0A   \n",
            "lines": "30"
        },
        {
            "label": "2025-09-22_19-10-11",
            "content": "@@ -149,14 +149,10 @@\n ness\n-: int\n =\n+ \n 0%0A%0A \n",
            "lines": "30"
        },
        {
            "label": "2025-09-22_19-10-28",
            "content": "@@ -157,16 +157,117 @@\n t=0%0A%0A   \n+ def __str__(self) -%3E str:%0A        return f%22color:%7Bself:color%7D, tam:%7Bself:size%7D, hum:%7Bself:wetness%7D %22\n %0A    %0A  \n",
            "lines": "30"
        },
        {
            "label": "2025-09-22_19-12-24",
            "content": "@@ -158,16 +158,21 @@\n =0%0A%0A   %0A\n+    %0A\n     def \n@@ -624,27 +624,8 @@\n M%22)%0A\n-doguito.size = %22M%22%0A\n prin\n",
            "lines": "29"
        },
        {
            "label": "2025-09-22_19-14-03",
            "content": "@@ -88,17 +88,16 @@\n lor: str\n- \n = color%0A\n@@ -118,17 +118,16 @@\n ize: str\n- \n = size%0A \n@@ -150,19 +150,17 @@\n ess: int\n- = \n+=\n 0%0A%0A   %0A \n",
            "lines": "29"
        },
        {
            "label": "2025-09-22_19-15-33",
            "content": "@@ -623,21 +623,85 @@\n M%22)%0A\n-print(doguito)%0A%0A\n+doguito.size = %22M%22%0Aprint(doguito)%0Adoguito.dry (3)%0Aprint(doguito)%0Adoguito.dry(15)\n %0A\n",
            "lines": "29"
        },
        {
            "label": "2025-09-22_19-15-51",
            "content": "@@ -9,17 +9,8 @@\n wel:\n-    #this\n %0A   \n@@ -22,16 +22,17 @@\n __init__\n+ \n (self, c\n@@ -36,17 +36,16 @@\n , color:\n- \n str, siz\n@@ -50,28 +50,26 @@\n ize:\n- \n str): #\n- constructor\n+CONSTRUCTOR\n %0A   \n@@ -100,20 +100,8 @@\n olor\n- # atributos\n %0A   \n@@ -154,24 +154,28 @@\n s: int = 0%0A%0A\n+   %0A\n     def dry(\n@@ -192,17 +192,16 @@\n nt: int)\n- \n -%3E None:\n@@ -319,16 +319,17 @@\n arcada%22)\n+ \n %0A       \n@@ -372,133 +372,9 @@\n ss()\n-%0A%0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    %0A    def wringOut(self) -%3E None:%0A        self.wetness = 0\n+ \n %0A%0A  \n@@ -580,127 +580,16 @@\n rn 0\n-%0A%0A    def __str__(self) -%3E str: # toString%0A        return f%22Cor:%7Bself.color%7D, Tam:%7Bself.size%7D, Umidade:%7Bself.wetness%7D%22%0A\n+        \n %0A%0A  \n",
            "lines": "27"
        },
        {
            "label": "2025-09-22_19-21-43",
            "content": "@@ -843,545 +843,55 @@\n %7D%22%0A%0A\n-def main ():%0A    toalha = Towel(%22%22,%22%22)%0A    while True:%0A        line: str = input()%0A        args: list%5Bstr%5D = line.split (%22 %22)%0A        %0A        if args %5B0%5D == %22new%22:%0A            break%0A        elif args %5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args %5B0%5D== %22show%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print(%22dail: comando inv%C3%A1lido%22)%0Amain()%0A    \n+%0A    %0Adoguito = Towel(%22red%22, %22M%22)%0Aprint(doguito)\n %0A%0A%0A\n",
            "lines": "36"
        },
        {
            "label": "2025-09-22_20-00-20",
            "content": "@@ -965,16 +965,25 @@\n t (%22 %22)%0A\n+        %0A\n         \n@@ -1002,11 +1002,11 @@\n == %22\n-end\n+new\n %22:%0A \n",
            "lines": "53"
        },
        {
            "label": "2025-09-22_20-13-23",
            "content": "class Towel:    #this\n    def __init__(self, color: str, size: str): # constructor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str: # toString\n        return f\"Cor:{self.color}, Tam:{self.size}, Umidade:{self.wetness}\"\n\ndef main ():\n    toalha = Towel(\"\",\"\")\n    while True:\n        line: str = input()\n        args: list[str] = line.split (\" \")\n        if args [0] == \"end\":\n            break\n        elif args [0] == \"new\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args [0]== \"show\":\n            print(toalha)\n        elif args[0] == \"dry\":\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else:\n            print(\"dail: comando inv\u00e1lido\")\nmain()\n    \n\n\n",
            "lines": "52"
        }
    ]
}